{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\admin\\\\dev\\\\0_Mesto_Finish\\\\react-mesto-api-full-gha\\\\frontend\\\\src\\\\components\\\\InfoTooltip.js\",\n  _s = $RefreshSig$();\nimport React, { useContext } from \"react\";\nimport { AppContext } from \"../contexts/AppContext\";\nimport { usePopupClose } from \"../hooks/usePopupClose\";\nimport successImage from '../images/success.svg';\nimport failureImage from '../images/failure.svg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction InfoTooltip(_ref) {\n  _s();\n  let {\n    isOpen,\n    isSucсess\n  } = _ref;\n  const {\n    closeAllPopups: onClose\n  } = useContext(AppContext);\n  usePopupClose(isOpen, onClose);\n  let message = '';\n  if (isSucсess) {\n    message = 'Вы успешно зарегистрировались!';\n  } else {\n    message = `Что-то пошло не так! Попробуйте ещё раз.`;\n  }\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: isOpen ? 'popup popup_type_card popup_opened' : 'popup popup_type_card',\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"popup__container-info-tooltip\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: isSucсess ? successImage : failureImage,\n          alt: isSucсess ? 'Успех' : 'Неудача',\n          className: \"popup__image-tooltip\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 20\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"popup__description-info-tooltip\",\n          children: message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 20\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"popup__button-close\",\n        type: \"button\",\n        id: \"button-close-tooltip\",\n        onClick: onClose\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 9\n  }, this);\n}\n_s(InfoTooltip, \"KvCvHvOPztG55Mp5pr0ZGz8eSYY=\", false, function () {\n  return [usePopupClose];\n});\n_c = InfoTooltip;\nexport default InfoTooltip;\nvar _c;\n$RefreshReg$(_c, \"InfoTooltip\");","map":{"version":3,"names":["React","useContext","AppContext","usePopupClose","successImage","failureImage","jsxDEV","_jsxDEV","InfoTooltip","_ref","_s","isOpen","isSucсess","closeAllPopups","onClose","message","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","type","id","onClick","_c","$RefreshReg$"],"sources":["C:/Users/admin/dev/0_Mesto_Finish/react-mesto-api-full-gha/frontend/src/components/InfoTooltip.js"],"sourcesContent":["import React, { useContext } from \"react\";\r\nimport { AppContext } from \"../contexts/AppContext\";\r\nimport { usePopupClose } from \"../hooks/usePopupClose\";\r\nimport successImage from '../images/success.svg';\r\nimport failureImage from '../images/failure.svg';\r\n\r\nfunction InfoTooltip({isOpen,isSucсess}) {\r\n    const { closeAllPopups: onClose } = useContext(AppContext);\r\n    usePopupClose(isOpen, onClose);\r\n    let message ='';\r\n\r\n    if (isSucсess) {\r\n        message = 'Вы успешно зарегистрировались!'\r\n    }\r\n        else {\r\n            message =`Что-то пошло не так! Попробуйте ещё раз.`\r\n        }\r\n    \r\n    return (\r\n        <section className={(isOpen) ?\r\n            'popup popup_type_card popup_opened' :\r\n            'popup popup_type_card'}>\r\n            <div className=\"popup__container-info-tooltip\">\r\n                <div>\r\n                   <img src={isSucсess ? successImage : failureImage} alt={isSucсess ? 'Успех' : 'Неудача'} className=\"popup__image-tooltip\" />\r\n                   <h1 className=\"popup__description-info-tooltip\">{message}</h1>\r\n                </div>\r\n                <button className=\"popup__button-close\" type=\"button\" id=\"button-close-tooltip\" onClick={onClose} />\r\n            </div>\r\n        </section>\r\n    );\r\n}\r\n\r\n\r\nexport default InfoTooltip;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,UAAU,QAAQ,OAAO;AACzC,SAASC,UAAU,QAAQ,wBAAwB;AACnD,SAASC,aAAa,QAAQ,wBAAwB;AACtD,OAAOC,YAAY,MAAM,uBAAuB;AAChD,OAAOC,YAAY,MAAM,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjD,SAASC,WAAWA,CAAAC,IAAA,EAAqB;EAAAC,EAAA;EAAA,IAApB;IAACC,MAAM;IAACC;EAAS,CAAC,GAAAH,IAAA;EACnC,MAAM;IAAEI,cAAc,EAAEC;EAAQ,CAAC,GAAGb,UAAU,CAACC,UAAU,CAAC;EAC1DC,aAAa,CAACQ,MAAM,EAAEG,OAAO,CAAC;EAC9B,IAAIC,OAAO,GAAE,EAAE;EAEf,IAAIH,SAAS,EAAE;IACXG,OAAO,GAAG,gCAAgC;EAC9C,CAAC,MACQ;IACDA,OAAO,GAAG,0CAAyC;EACvD;EAEJ,oBACIR,OAAA;IAASS,SAAS,EAAGL,MAAM,GACvB,oCAAoC,GACpC,uBAAwB;IAAAM,QAAA,eACxBV,OAAA;MAAKS,SAAS,EAAC,+BAA+B;MAAAC,QAAA,gBAC1CV,OAAA;QAAAU,QAAA,gBACGV,OAAA;UAAKW,GAAG,EAAEN,SAAS,GAAGR,YAAY,GAAGC,YAAa;UAACc,GAAG,EAAEP,SAAS,GAAG,OAAO,GAAG,SAAU;UAACI,SAAS,EAAC;QAAsB;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAC5HhB,OAAA;UAAIS,SAAS,EAAC,iCAAiC;UAAAC,QAAA,EAAEF;QAAO;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC5D,CAAC,eACNhB,OAAA;QAAQS,SAAS,EAAC,qBAAqB;QAACQ,IAAI,EAAC,QAAQ;QAACC,EAAE,EAAC,sBAAsB;QAACC,OAAO,EAAEZ;MAAQ;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnG;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAElB;AAACb,EAAA,CAzBQF,WAAW;EAAA,QAEhBL,aAAa;AAAA;AAAAwB,EAAA,GAFRnB,WAAW;AA4BpB,eAAeA,WAAW;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}